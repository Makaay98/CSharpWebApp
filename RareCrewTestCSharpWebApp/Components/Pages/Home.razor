@page "/"
@inject IEmployeeService employeeService;

<PageTitle>Home</PageTitle>

<div style="width: 100%; height: 100%; display: flex; justify-content:center; align-items: center;">
    @if (employees.Count() > 0)
    {
        <table>
           <thead>
                <tr>
                    <th>Name</th>
                    <th>Total Time</th>
                </tr>
           </thead>
            <tbody>
                
                @foreach (var employee in employees)
                {
                    string bgColor = (@employee.HoursWorked < 100 ? "red" : "transparent");
                    <tr style=@($"background-color: { bgColor }")>
                        <td> @(employee.EmployeeName ?? "N/A") </td>

                        <td> @(employee.HoursWorked.ToString() ?? "N/A") hours</td>
                    </tr>
                }
            </tbody>
        </table>
        <Chart employees="@employees"/>
    }
    
</div>


@code {
    private IEnumerable<Models.Employee> employees = new List<Models.Employee>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var employees = await employeeService.GetEmployees();

        //order
        this.employees = employees.OrderByDescending(employee => employee.HoursWorked );
    }
}